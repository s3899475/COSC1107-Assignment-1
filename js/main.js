/* Generated by the Nim Compiler v2.0.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI570425371 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI570425385 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405125 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405146 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405144 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1174405301 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405218 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1174405143 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1174405141 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555178 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555173 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555180 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555179 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555179.node = NNI33555179;
NTI33555180.base = NTI33555177;
NTI33555181.base = NTI33555177;
var NNI33555177 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555180, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555181, name: "up", sons: null}]};
NTI33555177.node = NNI33555177;
var NNI33555173 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555173.node = NNI33555173;
NTI33555177.base = NTI33555173;
NTI33555179.base = NTI33555177;
NTI134217746.base = NTI33555179;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
var NNI33555178 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555178.node = NNI33555178;
NTI33555178.base = NTI33555177;
NTI134217741.base = NTI33555178;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555178;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555178;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
NTI134217742.base = NTI134217741;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
NTI134217745.base = NTI33555178;
NTI1174405143.base = NTI33554435;
var NNI1174405141 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1174405143, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI1174405141.node = NNI1174405141;
NTI1174405218.base = NTI1174405141;
NTI1174405301.base = NTI33554435;
NTI1174405146.base = NTI1174405141;
var NNI1174405144 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1174405146, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI1174405144.node = NNI1174405144;
var NNI1174405125 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1174405125.node = NNI1174405125;
NTI570425385.base = NTI33554450;
var NNI570425371 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI570425371.node = NNI570425371;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet2 = setConstr([97, 122], [65, 90], [48, 57], 95);

function addChar(x_33557415, c_33557416) {
    x_33557415.push(c_33557416);

  
}
var ConstSet3 = setConstr([48, 57]);
var ConstSet4 = setConstr([48, 57]);
var ConstSet5 = setConstr(101, 69);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function toJSStr(s_33556901) {
  var result_33556902 = null;

    var res_33556943 = newSeq_33556919((s_33556901).length);
    var i_33556944 = 0;
    var j_33556945 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556944 < (s_33556901).length)) break Label2;
          var c_33556946 = s_33556901[i_33556944];
          if ((c_33556946 < 128)) {
          res_33556943[j_33556945] = String.fromCharCode(c_33556946);
          i_33556944 += 1;
          }
          else {
            var helper_33556959 = newSeq_33556919(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556960 = c_33556946.toString(16);
                  if ((((code_33556960) == null ? 0 : (code_33556960).length) == 1)) {
                  helper_33556959.push("%0");;
                  }
                  else {
                  helper_33556959.push("%");;
                  }
                  
                  helper_33556959.push(code_33556960);;
                  i_33556944 += 1;
                  if ((((s_33556901).length <= i_33556944) || (s_33556901[i_33556944] < 128))) {
                  break Label3;
                  }
                  
                  c_33556946 = s_33556901[i_33556944];
                }
            };
++excHandler;
            try {
            res_33556943[j_33556945] = decodeURIComponent(helper_33556959.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556943[j_33556945] = helper_33556959.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556945 += 1;
        }
    };
    if (res_33556943.length < j_33556945) { for (var i = res_33556943.length ; i < j_33556945 ; ++i) res_33556943.push(null); }
               else { res_33556943.length = j_33556945; };
    result_33556902 = res_33556943.join("");

  return result_33556902;

}

function nimParseBiggestFloat(s_33557448, number_33557449, number_33557449_Idx) {
    var Temporary1;

  var result_33557450 = 0;

  BeforeRet: {
    var sign_33557451 = false;
    var i_33557452 = 0;
    if ((s_33557448[i_33557452] == 43)) {
    i_33557452 += 1;
    }
    else {
    if ((s_33557448[i_33557452] == 45)) {
    sign_33557451 = true;
    i_33557452 += 1;
    }
    }
    if (((s_33557448[i_33557452] == 78) || (s_33557448[i_33557452] == 110))) {
    if (((s_33557448[(i_33557452 + 1)] == 65) || (s_33557448[(i_33557452 + 1)] == 97))) {
    if (((s_33557448[(i_33557452 + 2)] == 78) || (s_33557448[(i_33557452 + 2)] == 110))) {
    if (!((ConstSet1[s_33557448[(i_33557452 + 3)]] != undefined))) {
    number_33557449[number_33557449_Idx] = NaN;
    result_33557450 = (i_33557452 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557450 = 0;
    break BeforeRet;
    }
    
    if (((s_33557448[i_33557452] == 73) || (s_33557448[i_33557452] == 105))) {
    if (((s_33557448[(i_33557452 + 1)] == 78) || (s_33557448[(i_33557452 + 1)] == 110))) {
    if (((s_33557448[(i_33557452 + 2)] == 70) || (s_33557448[(i_33557452 + 2)] == 102))) {
    if (!((ConstSet2[s_33557448[(i_33557452 + 3)]] != undefined))) {
    if (sign_33557451) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557449[number_33557449_Idx] = Temporary1;
    result_33557450 = (i_33557452 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557450 = 0;
    break BeforeRet;
    }
    
    var buf_33557471 = [];
    if (sign_33557451) {
    addChar(buf_33557471, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet3[s_33557448[i_33557452]] != undefined)) break Label3;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label5;
                i_33557452 += 1;
              }
          };
        }
    };
    if ((s_33557448[i_33557452] == 46)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet4[s_33557448[i_33557452]] != undefined)) break Label7;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label9;
                i_33557452 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557471).length == (sign_33557451 ? 1 : 0))) {
    result_33557450 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet5[s_33557448[i_33557452]] != undefined)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    if ((s_33557448[i_33557452] == 43)) {
    i_33557452 += 1;
    }
    else {
    if ((s_33557448[i_33557452] == 45)) {
    addChar(buf_33557471, s_33557448[i_33557452]);;
    i_33557452 += 1;
    }
    }
    if (!((ConstSet6[s_33557448[i_33557452]] != undefined))) {
    result_33557450 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet7[s_33557448[i_33557452]] != undefined)) break Label11;
          addChar(buf_33557471, s_33557448[i_33557452]);;
          i_33557452 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557448[i_33557452] == 95)) break Label13;
                i_33557452 += 1;
              }
          };
        }
    };
    }
    
    number_33557449[number_33557449_Idx] = parseFloatNative_33557428(buf_33557471);
    result_33557450 = i_33557452;
  };

  return result_33557450;

}

function raiseException(e_33556653, ename_33556654) {
    e_33556653.name = ename_33556654;
    if ((excHandler == 0)) {
    unhandledException(e_33556653);
    }
    
    throw e_33556653;

  
}

function cstrToNimstr(c_33556898) {
      var ln = c_33556898.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556898.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556898.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function mnewString(len_33557003) {
        return new Array(len_33557003);
  

  
}

function addInt(a_33557050, b_33557051) {
        var result = a_33557050 + b_33557051;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557324, a_33557325, b_33557326) {
  var result_33557327 = 0;

  BeforeRet: {
    if (((a_33557325 <= i_33557324) && (i_33557324 <= b_33557326))) {
    result_33557327 = i_33557324;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557327;

}
var ConstSet8 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557268, src_33557269, ti_33557270) {
  var result_33557279 = null;

    switch (ti_33557270.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557259(ti_33557270))) {
      result_33557279 = src_33557269;
      }
      else {
        result_33557279 = [src_33557269[0], src_33557269[1]];
      }
      
      break;
    case 19:
            if (dest_33557268 === null || dest_33557268 === undefined) {
        dest_33557268 = {};
      }
      else {
        for (var key in dest_33557268) { delete dest_33557268[key]; }
      }
      for (var key in src_33557269) { dest_33557268[key] = src_33557269[key]; }
      result_33557279 = dest_33557268;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557270.base == null))) {
      result_33557279 = nimCopy(dest_33557268, src_33557269, ti_33557270.base);
      }
      else {
      if ((ti_33557270.kind == 17)) {
      result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {m_type: ti_33557270} : dest_33557268;
      }
      else {
        result_33557279 = (dest_33557268 === null || dest_33557268 === undefined) ? {} : dest_33557268;
      }
      }
      nimCopyAux(result_33557279, src_33557269, ti_33557270.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557269)) { 
        if(dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new src_33557269.constructor(src_33557269);
        } else {
          dest_33557268.set(src_33557269, 0);
        }
        result_33557279 = dest_33557268;
      } else {
        if (src_33557269 === null) {
          result_33557279 = null;
        }
        else {
          if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
            dest_33557268 = new Array(src_33557269.length);
          }
          result_33557279 = dest_33557268;
          for (var i = 0; i < src_33557269.length; ++i) {
            result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557269 === null) {
        result_33557279 = null;
      }
      else {
        if (dest_33557268 === null || dest_33557268 === undefined || dest_33557268.length != src_33557269.length) {
          dest_33557268 = new Array(src_33557269.length);
        }
        result_33557279 = dest_33557268;
        for (var i = 0; i < src_33557269.length; ++i) {
          result_33557279[i] = nimCopy(result_33557279[i], src_33557269[i], ti_33557270.base);
        }
      }
    
      break;
    case 28:
            if (src_33557269 !== null) {
        result_33557279 = src_33557269.slice(0);
      }
    
      break;
    default: 
      result_33557279 = src_33557269;
      break;
    }

  return result_33557279;

}

function chckIndx(i_33557319, a_33557320, b_33557321) {
  var result_33557322 = 0;

  BeforeRet: {
    if (((a_33557320 <= i_33557319) && (i_33557319 <= b_33557321))) {
    result_33557322 = i_33557319;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557319, a_33557320, b_33557321);
    }
    
  };

  return result_33557322;

}
var ConstSet9 = setConstr([48, 57]);
var ConstSet10 = setConstr([48, 57]);

function divInt64(a_33557084, b_33557085) {
        if (b_33557085 == 0n) raiseDivByZero();
    if (b_33557085 == -1n && a_33557084 == 9223372036854775807n) raiseOverflow();
    return a_33557084 / b_33557085;
  

  
}

function eqStrings(a_33557041, b_33557042) {
        if (a_33557041 == b_33557042) return true;
    if (a_33557041 === null && b_33557042.length == 0) return true;
    if (b_33557042 === null && a_33557041.length == 0) return true;
    if ((!a_33557041) || (!b_33557042)) return false;
    var alen = a_33557041.length;
    if (alen != b_33557042.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33557041[i] != b_33557042[i]) return false;
    return true;
  

  
}

function makeNimstrLit(c_33556895) {
      var result = [];
  for (var i = 0; i < c_33556895.length; ++i) {
    result[i] = c_33556895.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet11 = setConstr(76, 82, 85, 78);

function subInt(a_33557054, b_33557055) {
        var result = a_33557054 - b_33557055;
    checkOverflowInt(result);
    return result;
  

  
}

function mulInt(a_33557058, b_33557059) {
        var result = a_33557058 * b_33557059;
    checkOverflowInt(result);
    return result;
  

  
}

function genericReset(x_33557306, ti_33557307) {
  var result_33557308 = null;

    result_33557308 = null;
    switch (ti_33557307.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557259(ti_33557307)) {
              result_33557308 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557308 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557307.kind == 17)) {
      result_33557308 = {m_type: ti_33557307};
      }
      else {
        result_33557308 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557308 = [];
    
      break;
    case 4:
    case 16:
            result_33557308 = new Array(x_33557306.length);
      for (var i = 0; i < x_33557306.length; ++i) {
        result_33557308[i] = genericReset(x_33557306[i], ti_33557307.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557308;

}

function divInt(a_33557062, b_33557063) {
        if (b_33557063 == 0) raiseDivByZero();
    if (b_33557063 == -1 && a_33557062 == 2147483647) raiseOverflow();
    return Math.trunc(a_33557062 / b_33557063);
  

  
}

function newSeq_33556919(len_33556921) {
  var result_33556922 = [];

    result_33556922 = new Array(len_33556921); for (var i = 0 ; i < len_33556921 ; ++i) { result_33556922[i] = null; }
  return result_33556922;

}

function parseFloatNative_33557428(a_33557429) {
  var result_33557430 = 0.0;

    var str_33557431 = [];
    Label1: {
      var x_33557445 = 0;
      var i_570425885 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425885 < (a_33557429).length)) break Label3;
            x_33557445 = a_33557429[i_570425885];
            addChar(str_33557431, x_33557445);;
            i_570425885 += 1;
          }
      };
    };
    var cstr_33557446 = toJSStr(str_33557431);
      result_33557430 = Number(cstr_33557446);
  

  return result_33557430;

}

function npuParseFloat(s_939524626, number_939524627, number_939524627_Idx) {
  var result_939524628 = 0;

    var bf_939524629 = [0.0];
    result_939524628 = nimParseBiggestFloat(s_939524626, bf_939524629, 0);
    if (!((result_939524628 == 0))) {
    number_939524627[number_939524627_Idx] = bf_939524629[0];
    }
    

  return result_939524628;

}

function parseFloat_939525028(s_939525029, number_939525030, number_939525030_Idx, start_939525031) {
  var result_939525032 = 0;

    result_939525032 = npuParseFloat((s_939525029.slice(start_939525031, (s_939525029).length - 1 + 1)), number_939525030, number_939525030_Idx);

  return result_939525032;

}

function add_33556373(x_33556374, x_33556374_Idx, y_33556375) {
          if (x_33556374[x_33556374_Idx] === null) { x_33556374[x_33556374_Idx] = []; }
      var off = x_33556374[x_33556374_Idx].length;
      x_33556374[x_33556374_Idx].length += y_33556375.length;
      for (var i = 0; i < y_33556375.length; ++i) {
        x_33556374[x_33556374_Idx][off+i] = y_33556375.charCodeAt(i);
      }
    

  
}

function unhandledException(e_33556649) {
    var buf_33556650 = [[]];
    if (!(((e_33556649.message).length == 0))) {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556650[0].push.apply(buf_33556650[0], e_33556649.message);;
    }
    else {
    buf_33556650[0].push.apply(buf_33556650[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556650[0].push.apply(buf_33556650[0], [32,91]);;
    add_33556373(buf_33556650, 0, e_33556649.name);
    buf_33556650[0].push.apply(buf_33556650[0], [93,10]);;
    var cbuf_33556651 = toJSStr(buf_33556650[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556651);
  }
  else {
    throw cbuf_33556651;
  }
  

  
}

function nsuParseFloat(s_922747757) {
  var result_922747758 = [0.0];

    result_922747758[0] = 0.0;
    var L_922747759 = parseFloat_939525028(s_922747757, result_922747758, 0, 0);
    if ((!((L_922747759 == (s_922747757).length)) || (L_922747759 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_922747757 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_922747758[0];

}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33557048) {
        if (a_33557048 > 2147483647 || a_33557048 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990090(result_301990092, result_301990092_Idx, x_301990093, start_301990094, n_301990095) {
    var Temporary1;

    var old_301990096 = (result_301990092[result_301990092_Idx]).length;
    if (result_301990092[result_301990092_Idx].length < (Temporary1 = chckRange(addInt(old_301990096, n_301990095), 0, 2147483647), Temporary1)) { for (var i = result_301990092[result_301990092_Idx].length; i < Temporary1; ++i) result_301990092[result_301990092_Idx].push(0); }
         else {result_301990092[result_301990092_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990110 = 0;
      var i_570425893 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_570425893 < n_301990095)) break Label4;
            iHEX60gensym4_301990110 = i_570425893;
            result_301990092[result_301990092_Idx][chckIndx(addInt(old_301990096, iHEX60gensym4_301990110), 0, (result_301990092[result_301990092_Idx]).length - 1)] = x_301990093.charCodeAt(chckIndx(addInt(start_301990094, iHEX60gensym4_301990110), 0, (x_301990093).length - 1));
            i_570425893 = addInt(i_570425893, 1);
          }
      };
    };

  
}

function addChars_301990086(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990090(result_301990088, result_301990088_Idx, x_301990089, 0, ((x_301990089) == null ? 0 : (x_301990089).length));

  
}

function addInt_301990111(result_301990112, result_301990112_Idx, x_301990113) {
    addChars_301990086(result_301990112, result_301990112_Idx, ((x_301990113) + ""));

  
}

function addInt_301990129(result_301990130, result_301990130_Idx, x_301990131) {
    addInt_301990111(result_301990130, result_301990130_Idx, BigInt(x_301990131));

  
}

function HEX24_385875976(x_385875977) {
  var result_385875978 = [[]];

    addInt_301990129(result_385875978, 0, x_385875977);

  return result_385875978[0];

}

function isFatPointer_33557259(ti_33557260) {
  var result_33557261 = false;

  BeforeRet: {
    result_33557261 = !((ConstSet8[ti_33557260.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557261;

}

function nimCopyAux(dest_33557272, src_33557273, n_33557274) {
    switch (n_33557274.kind) {
    case 0:
      break;
    case 1:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557274.sons.length; i++) {
      nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i]);
    }
    
      break;
    case 3:
            dest_33557272[n_33557274.offset] = nimCopy(dest_33557272[n_33557274.offset], src_33557273[n_33557274.offset], n_33557274.typ);
      for (var i = 0; i < n_33557274.sons.length; ++i) {
        nimCopyAux(dest_33557272, src_33557273, n_33557274.sons[i][1]);
      }
    
      break;
    }

  
}

function raiseIndexError(i_33556812, a_33556813, b_33556814) {
    var Temporary1;

    if ((b_33556814 < a_33556813)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_385875976(i_33556812) || [],[32,110,111,116,32,105,110,32] || [],HEX24_385875976(a_33556813) || [],[32,46,46,32] || [],HEX24_385875976(b_33556814) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function get_interval_570425530(idx_570425531) {
    var Temporary1;

  var result_570425532 = 0;

    var values_570425533 = new Int32Array([5, 10, 50, 100, 200, 500, 1000, 2000]);
    if (((idx_570425531 < 0) || (7 < idx_570425531))) {
    Temporary1 = 100;
    }
    else {
    Temporary1 = values_570425533[chckIndx(idx_570425531, 0, (values_570425533).length - 1)];
    }
    
    result_570425532 = Temporary1;

  return result_570425532;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function integerOutOfRangeError_939524421() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_939524423(s_939524424, b_939524425, b_939524425_Idx) {
      var Temporary1;
          var Temporary4;

  var result_939524426 = 0;

    var sign_939524427 = (-1n);
    var i_939524428 = 0;
    if ((i_939524428 < (s_939524424).length)) {
    if ((s_939524424[chckIndx(i_939524428, 0, (s_939524424).length - 1)] == 43)) {
    i_939524428 += 1;
    }
    else {
    if ((s_939524424[chckIndx(i_939524428, 0, (s_939524424).length - 1)] == 45)) {
    i_939524428 += 1;
    sign_939524427 = 1n;
    }
    }
    }
    
      if (!(i_939524428 < (s_939524424).length)) Temporary1 = false; else {        Temporary1 = (ConstSet9[s_939524424[chckIndx(i_939524428, 0, (s_939524424).length - 1)]] != undefined);      }    if (Temporary1) {
    b_939524425[b_939524425_Idx] = 0n;
    Label2: {
        Label3: while (true) {
          if (!(i_939524428 < (s_939524424).length)) Temporary4 = false; else {            Temporary4 = (ConstSet10[s_939524424[chckIndx(i_939524428, 0, (s_939524424).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_939524462 = (s_939524424[chckIndx(i_939524428, 0, (s_939524424).length - 1)] - 48);
          if ((((-9223372036854775808n) + BigInt(c_939524462)) / 10n <= b_939524425[b_939524425_Idx])) {
          b_939524425[b_939524425_Idx] = ((b_939524425[b_939524425_Idx] * 10n) - BigInt(c_939524462));
          }
          else {
          integerOutOfRangeError_939524421();
          }
          
          i_939524428 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_939524428 < (s_939524424).length) && (s_939524424[chckIndx(i_939524428, 0, (s_939524424).length - 1)] == 95))) break Label6;
                i_939524428 += 1;
              }
          };
        }
    };
    if (((sign_939524427 == (-1n)) && (b_939524425[b_939524425_Idx] == (-9223372036854775808n)))) {
    integerOutOfRangeError_939524421();
    }
    else {
      b_939524425[b_939524425_Idx] = (b_939524425[b_939524425_Idx] * sign_939524427);
      result_939524426 = i_939524428;
    }
    
    }
    

  return result_939524426;

}

function npuParseBiggestInt(s_939524485, number_939524486, number_939524486_Idx) {
  var result_939524487 = 0;

    var res_939524488 = [0n];
    result_939524487 = rawParseInt_939524423(s_939524485, res_939524488, 0);
    if (!((result_939524487 == 0))) {
    number_939524486[number_939524486_Idx] = res_939524488[0];
    }
    

  return result_939524487;

}

function npuParseInt(s_939524490, number_939524491, number_939524491_Idx) {
  var result_939524492 = 0;

    var res_939524493 = [0n];
    result_939524492 = npuParseBiggestInt(s_939524490, res_939524493, 0);
    if (((res_939524493[0] < (-2147483648n)) || (2147483647n < res_939524493[0]))) {
    integerOutOfRangeError_939524421();
    }
    
    if (!((result_939524492 == 0))) {
    number_939524491[number_939524491_Idx] = chckRange(Number(res_939524493[0]), (-2147483648), 2147483647);
    }
    

  return result_939524492;

}

function parseInt_939525003(s_939525004, number_939525005, number_939525005_Idx, start_939525006) {
  var result_939525007 = 0;

    result_939525007 = npuParseInt((s_939525004.slice(start_939525006, (s_939525004).length - 1 + 1)), number_939525005, number_939525005_Idx);

  return result_939525007;

}

function nsuParseInt(s_922747737) {
  var result_922747738 = [0];

    result_922747738[0] = 0;
    var L_922747739 = parseInt_939525003(s_922747737, result_922747738, 0, 0);
    if ((!((L_922747739 == (s_922747737).length)) || (L_922747739 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_922747737 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_922747738[0];

}

function sysFatal_268435501(message_268435504) {
    raiseException({message: nimCopy(null, message_268435504, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435499(msg_268435500) {
    sysFatal_268435501(msg_268435500);

  
}

function failedAssertImpl_268435541(msg_268435542) {
    raiseAssert_268435499(msg_268435542);

  
}

function allCharsInSet_922748437(s_922748438, theSet_922748439) {
  var result_922748440 = false;

  BeforeRet: {
    Label1: {
      var c_922748441 = 0;
      var i_570425899 = 0;
      var L_570425900 = (s_922748438).length;
      Label2: {
          Label3: while (true) {
          if (!(i_570425899 < L_570425900)) break Label3;
            c_922748441 = s_922748438[chckIndx(i_570425899, 0, (s_922748438).length - 1)];
            if (!((theSet_922748439[c_922748441] != undefined))) {
            result_922748440 = false;
            break BeforeRet;
            }
            
            i_570425899 = addInt(i_570425899, 1);
            if (!(((s_922748438).length == L_570425900))) {
            failedAssertImpl_268435541(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_922748440 = true;
    break BeforeRet;
  };

  return result_922748440;

}

function definition_valid_570425579(def_570425580) {
  var result_570425581 = false;

    result_570425581 = (!(eqStrings(def_570425580, [])) && allCharsInSet_922748437(def_570425580, ConstSet11));

  return result_570425581;

}

function nextPowerOfTwo_738197751(x_738197752) {
  var result_738197753 = 0;

    result_738197753 = (x_738197752 - 1);
    result_738197753 = (result_738197753 | (result_738197753 >> 16));
    result_738197753 = (result_738197753 | (result_738197753 >> 8));
    result_738197753 = (result_738197753 | (result_738197753 >> 4));
    result_738197753 = (result_738197753 | (result_738197753 >> 2));
    result_738197753 = (result_738197753 | (result_738197753 >> 1));
    result_738197753 += (1 + ((x_738197752 <= 0) ? 1 : 0));

  return result_738197753;

}

function initDeque_1174405179(initialSize_1174405181) {
  var result_1174405182 = ({data: [], head: 0, tail: 0, count: 0, mask: 0});

    var correctSizeHEX60gensym0_1174405184 = nextPowerOfTwo_738197751(initialSize_1174405181);
    result_1174405182.mask = subInt(correctSizeHEX60gensym0_1174405184, 1);
    result_1174405182.data = new Array(chckRange(correctSizeHEX60gensym0_1174405184, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1174405184, 0, 2147483647) ; ++i) { result_1174405182.data[i] = ({data: [], head: 0, tail: 0, count: 0, mask: 0}); }
  return result_1174405182;

}

function newSeq_1174405276(len_1174405278) {
  var result_1174405279 = [];

    result_1174405279 = new Array(len_1174405278); for (var i = 0 ; i < len_1174405278 ; ++i) { result_1174405279[i] = ({data: [], head: 0, tail: 0, count: 0, mask: 0}); }
  return result_1174405279;

}

function expandIfNeeded_1174405266(deq_1174405268) {
              var Temporary5;
    var Temporary6;

    if ((deq_1174405268.mask == 0)) {
    var correctSizeHEX60gensym3_1174405270 = nextPowerOfTwo_738197751(4);
    deq_1174405268.mask = subInt(correctSizeHEX60gensym3_1174405270, 1);
    deq_1174405268.data = new Array(chckRange(correctSizeHEX60gensym3_1174405270, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_1174405270, 0, 2147483647) ; ++i) { deq_1174405268.data[i] = ({data: [], head: 0, tail: 0, count: 0, mask: 0}); }    }
    
    var cap_1174405275 = addInt(deq_1174405268.mask, 1);
    if ((cap_1174405275 <= deq_1174405268.count)) {
    var n_1174405284 = newSeq_1174405276(chckRange(mulInt(cap_1174405275, 2), 0, 2147483647));
    var i_1174405285 = 0;
    Label1: {
      var x_1174405295 = null;
      var i_570425906 = deq_1174405268.head;
      Label2: {
        var c_570425908 = 0;
        var i_570425909 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_570425909 < deq_1174405268.count)) break Label4;
              c_570425908 = i_570425909;
              x_1174405295 = deq_1174405268.data[chckIndx(i_570425906, 0, (deq_1174405268.data).length - 1)];
              Temporary5 = x_1174405295;
              x_1174405295 = genericReset(x_1174405295, NTI1174405141);
              n_1174405284[chckIndx(i_1174405285, 0, (n_1174405284).length - 1)] = nimCopy(n_1174405284[chckIndx(i_1174405285, 0, (n_1174405284).length - 1)], Temporary5, NTI1174405141);
              i_1174405285 = addInt(i_1174405285, 1);
              i_570425906 = (addInt(i_570425906, 1) & deq_1174405268.mask);
              i_570425909 = addInt(i_570425909, 1);
            }
        };
      };
    };
    Temporary6 = n_1174405284;
    n_1174405284 = genericReset(n_1174405284, NTI1174405218);
    deq_1174405268.data = nimCopy(null, Temporary6, NTI1174405218);
    deq_1174405268.mask = subInt(mulInt(cap_1174405275, 2), 1);
    deq_1174405268.tail = deq_1174405268.count;
    deq_1174405268.head = 0;
    }
    

  
}

function addFirst_1174405257(deq_1174405259, item_1174405260) {
    expandIfNeeded_1174405266(deq_1174405259);
    deq_1174405259.count = addInt(deq_1174405259.count, 1);
    deq_1174405259.head = (subInt(deq_1174405259.head, 1) & deq_1174405259.mask);
    deq_1174405259.data[chckIndx(deq_1174405259.head, 0, (deq_1174405259.data).length - 1)] = nimCopy(deq_1174405259.data[chckIndx(deq_1174405259.head, 0, (deq_1174405259.data).length - 1)], item_1174405260, NTI1174405141);

  
}

function initDeque_1174405231(initialSize_1174405233) {
  var result_1174405234 = ({data: [], head: 0, tail: 0, count: 0, mask: 0});

    var correctSizeHEX60gensym1_1174405236 = nextPowerOfTwo_738197751(initialSize_1174405233);
    result_1174405234.mask = subInt(correctSizeHEX60gensym1_1174405236, 1);
    result_1174405234.data = new Array(chckRange(correctSizeHEX60gensym1_1174405236, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1174405236, 0, 2147483647) ; ++i) { result_1174405234.data[i] = 0; }
  return result_1174405234;

}

function newSeq_1174405417(len_1174405419) {
  var result_1174405420 = [];

    result_1174405420 = new Array(len_1174405419); for (var i = 0 ; i < len_1174405419 ; ++i) { result_1174405420[i] = 0; }
  return result_1174405420;

}

function expandIfNeeded_1174405407(deq_1174405409) {
              var Temporary5;
    var Temporary6;

    if ((deq_1174405409.mask == 0)) {
    var correctSizeHEX60gensym10_1174405411 = nextPowerOfTwo_738197751(4);
    deq_1174405409.mask = subInt(correctSizeHEX60gensym10_1174405411, 1);
    deq_1174405409.data = new Array(chckRange(correctSizeHEX60gensym10_1174405411, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_1174405411, 0, 2147483647) ; ++i) { deq_1174405409.data[i] = 0; }    }
    
    var cap_1174405416 = addInt(deq_1174405409.mask, 1);
    if ((cap_1174405416 <= deq_1174405409.count)) {
    var n_1174405425 = newSeq_1174405417(chckRange(mulInt(cap_1174405416, 2), 0, 2147483647));
    var i_1174405426 = 0;
    Label1: {
      var x_1174405436 = null;
      var x_1174405436_Idx = 0;
      var i_570425915 = deq_1174405409.head;
      Label2: {
        var c_570425917 = 0;
        var i_570425918 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_570425918 < deq_1174405409.count)) break Label4;
              c_570425917 = i_570425918;
              x_1174405436 = deq_1174405409.data; x_1174405436_Idx = chckIndx(i_570425915, 0, (deq_1174405409.data).length - 1);
              Temporary5 = x_1174405436[x_1174405436_Idx];
              x_1174405436[x_1174405436_Idx] = genericReset(x_1174405436[x_1174405436_Idx], NTI33554435);
              n_1174405425[chckIndx(i_1174405426, 0, (n_1174405425).length - 1)] = Temporary5;
              i_1174405426 = addInt(i_1174405426, 1);
              i_570425915 = (addInt(i_570425915, 1) & deq_1174405409.mask);
              i_570425918 = addInt(i_570425918, 1);
            }
        };
      };
    };
    Temporary6 = n_1174405425;
    n_1174405425 = genericReset(n_1174405425, NTI1174405301);
    deq_1174405409.data = nimCopy(null, Temporary6, NTI1174405301);
    deq_1174405409.mask = subInt(mulInt(cap_1174405416, 2), 1);
    deq_1174405409.tail = deq_1174405409.count;
    deq_1174405409.head = 0;
    }
    

  
}

function addFirst_1174405398(deq_1174405400, item_1174405401) {
    expandIfNeeded_1174405407(deq_1174405400);
    deq_1174405400.count = addInt(deq_1174405400.count, 1);
    deq_1174405400.head = (subInt(deq_1174405400.head, 1) & deq_1174405400.mask);
    deq_1174405400.data[chckIndx(deq_1174405400.head, 0, (deq_1174405400.data).length - 1)] = item_1174405401;

  
}

function HEX5BHEX5D_1174405386(deq_1174405388, i_1174405389) {
  var result_1174405390 = null;

  BeforeRet: {
    if ((deq_1174405388.count <= i_1174405389)) {
    raiseException({message: ([79,117,116,32,111,102,32,98,111,117,110,100,115,58,32] || []).concat(HEX24_385875976(i_1174405389) || [],[32,62,32] || [],HEX24_385875976(subInt(deq_1174405388.count, 1)) || []), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((i_1174405389 < 0)) {
    raiseException({message: ([79,117,116,32,111,102,32,98,111,117,110,100,115,58,32] || []).concat(HEX24_385875976(i_1174405389) || [],[32,60,32,48] || []), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    result_1174405390 = deq_1174405388.data[chckIndx((addInt(deq_1174405388.head, i_1174405389) & deq_1174405388.mask), 0, (deq_1174405388.data).length - 1)];
    break BeforeRet;
  };

  return result_1174405390;

}

function newGrid_1174405174(default_1174405176) {
  var result_1174405177 = null;

    var y_1174405225 = [initDeque_1174405179(4)];
    addFirst_1174405257(y_1174405225[0], initDeque_1174405231(4));
    addFirst_1174405398(HEX5BHEX5D_1174405386(y_1174405225[0], 0), default_1174405176);
    result_1174405177 = {arr: nimCopy(null, y_1174405225[0], NTI1174405144), min_x: 0, min_y: 0, default: default_1174405176};

  return result_1174405177;

}

function initAnt_1174405170(def_1174405171, initial_dir_1174405172) {
  var result_1174405173 = null;

    result_1174405173 = {def: nimCopy(null, def_1174405171, NTI33554449), nstates: (def_1174405171).length, grid: newGrid_1174405174(0), dir: initial_dir_1174405172, pos: nimCopy(null, {Field0: 0, Field1: 0}, NTI1174405125)};

  return result_1174405173;

}

function nimFloatToString_402653337(a_402653338) {
  var result_402653339 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_402653338))
      result_402653339 = a_402653338 === 0 && 1 / a_402653338 < 0 ? "-0.0" : a_402653338+".0"
    else {
      result_402653339 = a_402653338+""
      if(nimOnlyDigitsOrMinus(result_402653339)){
        result_402653339 = a_402653338+".0"
      }
    }
  

  return result_402653339;

}

function addFloat_33557563(result_33557565, result_33557565_Idx, x_33557566) {
    add_33556373(result_33557565, result_33557565_Idx, nimFloatToString_402653337(x_33557566));

  
}

function HEX24_33557559(x_33557561) {
  var result_33557562 = [[]];

    addFloat_33557563(result_33557562, 0, x_33557561);

  return result_33557562[0];

}

function greyscale_570425405(top_570425406, val_570425407) {
  var result_570425408 = null;

    var shade_570425412 = HEX24_33557559((255.0 - Math.ceil(((val_570425407 / top_570425406) * 255.0))));
    result_570425408 = toJSStr(([114,103,98,40] || []).concat(shade_570425412 || [],[44] || [],shade_570425412 || [],[44] || [],shade_570425412 || [],[41] || []));

  return result_570425408;

}

function rainbow_570425413(top_570425414, val_570425415) {
    var Temporary1;

  var result_570425416 = null;

    if ((val_570425415 == 0)) {
    Temporary1 = "#FFFFFF";
    }
    else {
      var hue_570425420 = HEX24_33557559((360.0 - Math.ceil(((val_570425415 / top_570425414) * 360.0))));
    Temporary1 = toJSStr(([104,115,108,40] || []).concat(hue_570425420 || [],[44,57,48,37,44,53,48,37,41] || []));
    }
    
    result_570425416 = Temporary1;

  return result_570425416;

}

function gen_palette_570425421(a_570425422, palette_570425423) {
  var result_570425424 = [];

    var fn_570425428 = null;
    switch (palette_570425423) {
    case "greyscale":
      fn_570425428 = greyscale_570425405;
      break;
    case "rainbow":
      fn_570425428 = rainbow_570425413;
      break;
    default: 
      fn_570425428 = greyscale_570425405;
      break;
    }
    Label1: {
      var i_570425433 = 0;
      var i_570425921 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425921 < a_570425422.nstates)) break Label3;
            i_570425433 = i_570425921;
            result_570425424.push(fn_570425428(subInt(a_570425422.nstates, 1), i_570425433));;
            i_570425921 = addInt(i_570425921, 1);
          }
      };
    };

  return result_570425424;

}

function getContext2d_570425368(c_570425369) {
  var result_570425370 = null;

    result_570425370 = c_570425369.getContext('2d');

  return result_570425370;

}

function fitCanvas_570425528(c_570425529) {
    c_570425529.width = window.innerWidth;
    c_570425529.height = window.innerHeight;

  
}

function draw_on_grid_570425396(ctx_570425397, x_570425398, y_570425399, scale_570425400) {
    var grid_size_570425401 = divInt(256, scale_570425400);
    var pos_570425404 = nimCopy(null, {Field0: addInt(divInt(ctx_570425397.canvas.width, 2), mulInt(x_570425398, grid_size_570425401)), Field1: addInt(divInt(ctx_570425397.canvas.height, 2), mulInt(y_570425399, grid_size_570425401))}, NTI570425371);
    ctx_570425397.fillRect(subInt(subInt(pos_570425404.Field0, divInt(grid_size_570425401, 2)), 1), subInt(subInt(pos_570425404.Field1, divInt(grid_size_570425401, 2)), 1), grid_size_570425401, grid_size_570425401);

  
}

function draw_570425469(ctx_570425470, a_570425471, scale_570425472, palette_570425473) {
    ctx_570425470.clearRect(0, 0, ctx_570425470.canvas.width, ctx_570425470.canvas.height);
    Label1: {
      var y_idx_570425506 = 0;
      var row_570425507 = ({data: [], head: 0, tail: 0, count: 0, mask: 0});
      var i_570425936 = a_570425471.grid.arr.head;
      Label2: {
        var c_570425938 = 0;
        var i_570425939 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_570425939 < a_570425471.grid.arr.count)) break Label4;
              c_570425938 = i_570425939;
              y_idx_570425506 = c_570425938;
              row_570425507 = nimCopy(row_570425507, a_570425471.grid.arr.data[chckIndx(i_570425936, 0, (a_570425471.grid.arr.data).length - 1)], NTI1174405141);
              Label5: {
                var x_idx_570425519 = 0;
                var val_570425520 = 0;
                var i_570425928 = row_570425507.head;
                Label6: {
                  var c_570425930 = 0;
                  var i_570425931 = 0;
                  Label7: {
                      Label8: while (true) {
                      if (!(i_570425931 < row_570425507.count)) break Label8;
                        c_570425930 = i_570425931;
                        x_idx_570425519 = c_570425930;
                        val_570425520 = row_570425507.data[chckIndx(i_570425928, 0, (row_570425507.data).length - 1)];
                        var x_570425521 = addInt(x_idx_570425519, a_570425471.grid.min_x);
                        var y_570425522 = addInt(y_idx_570425506, a_570425471.grid.min_y);
                        if ((0 < val_570425520)) {
                        ctx_570425470.fillStyle = palette_570425473[chckIndx(val_570425520, 0, (palette_570425473).length - 1)];
                        draw_on_grid_570425396(ctx_570425470, x_570425521, y_570425522, scale_570425472);
                        }
                        
                        i_570425928 = (addInt(i_570425928, 1) & row_570425507.mask);
                        i_570425931 = addInt(i_570425931, 1);
                      }
                  };
                };
              };
              i_570425936 = (addInt(i_570425936, 1) & a_570425471.grid.arr.mask);
              i_570425939 = addInt(i_570425939, 1);
            }
        };
      };
    };

  
}

function draw_ant_570425523(ctx_570425524, a_570425525, scale_570425526, colour_570425527) {
    ctx_570425524.fillStyle = colour_570425527;
    draw_on_grid_570425396(ctx_570425524, mulInt(a_570425525.pos.Field0, 2), mulInt(a_570425525.pos.Field1, 2), mulInt(scale_570425526, 2));

  
}

function len_1174405691(deq_1174405693) {
  var result_1174405694 = 0;

    result_1174405694 = deq_1174405693.count;

  return result_1174405694;

}

function len_1174405705(deq_1174405707) {
  var result_1174405708 = 0;

    result_1174405708 = deq_1174405707.count;

  return result_1174405708;

}

function addLast_1174405848(deq_1174405850, item_1174405851) {
    expandIfNeeded_1174405266(deq_1174405850);
    deq_1174405850.count = addInt(deq_1174405850.count, 1);
    deq_1174405850.data[chckIndx(deq_1174405850.tail, 0, (deq_1174405850.data).length - 1)] = nimCopy(deq_1174405850.data[chckIndx(deq_1174405850.tail, 0, (deq_1174405850.data).length - 1)], item_1174405851, NTI1174405141);
    deq_1174405850.tail = (addInt(deq_1174405850.tail, 1) & deq_1174405850.mask);

  
}

function addLast_1174405815(deq_1174405817, item_1174405818) {
    expandIfNeeded_1174405407(deq_1174405817);
    deq_1174405817.count = addInt(deq_1174405817.count, 1);
    deq_1174405817.data[chckIndx(deq_1174405817.tail, 0, (deq_1174405817.data).length - 1)] = item_1174405818;
    deq_1174405817.tail = (addInt(deq_1174405817.tail, 1) & deq_1174405817.mask);

  
}

function toDeque_1174405783(x_1174405785) {
  var result_1174405786 = [({data: [], head: 0, tail: 0, count: 0, mask: 0})];

    var correctSizeHEX60gensym13_1174405792 = nextPowerOfTwo_738197751((x_1174405785).length);
    result_1174405786[0].mask = subInt(correctSizeHEX60gensym13_1174405792, 1);
    result_1174405786[0].data = new Array(chckRange(correctSizeHEX60gensym13_1174405792, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1174405792, 0, 2147483647) ; ++i) { result_1174405786[0].data[i] = 0; }    Label1: {
      var item_1174405809 = 0;
      var i_570425971 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425971 < (x_1174405785).length)) break Label3;
            item_1174405809 = x_1174405785[chckIndx(i_570425971, 0, (x_1174405785).length - 1)];
            addLast_1174405815(result_1174405786[0], item_1174405809);
            i_570425971 = addInt(i_570425971, 1);
          }
      };
    };

  return result_1174405786[0];

}

function repeat_1174405770(x_1174405772, n_1174405773) {
  var result_1174405774 = [];

    result_1174405774 = nimCopy(null, newSeq_1174405417(n_1174405773), NTI1174405301);
    Label1: {
      var i_1174405782 = 0;
      var colontmp__570425974 = 0;
      colontmp__570425974 = n_1174405773;
      var i_570425975 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_570425975 < colontmp__570425974)) break Label3;
            i_1174405782 = i_570425975;
            result_1174405774[chckIndx(i_1174405782, 0, (result_1174405774).length - 1)] = x_1174405772;
            i_570425975 = addInt(i_570425975, 1);
          }
      };
    };

  return result_1174405774;

}

function expand_to_1174405639(g_1174405641, g_1174405641_Idx, x_1174405642, y_1174405643) {
    var max_x_1174405695 = subInt(addInt(len_1174405691(HEX5BHEX5D_1174405386(g_1174405641[g_1174405641_Idx].arr, 0)), g_1174405641[g_1174405641_Idx].min_x), 1);
    var max_y_1174405709 = subInt(addInt(len_1174405705(g_1174405641[g_1174405641_Idx].arr), g_1174405641[g_1174405641_Idx].min_y), 1);
    if ((max_y_1174405709 < y_1174405643)) {
    Label1: {
      var __1174405714 = 0;
      var colontmp__570425942 = 0;
      colontmp__570425942 = subInt(y_1174405643, max_y_1174405709);
      var res_570425943 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_570425943 <= colontmp__570425942)) break Label3;
            __1174405714 = res_570425943;
            addLast_1174405848(g_1174405641[g_1174405641_Idx].arr, toDeque_1174405783(repeat_1174405770(g_1174405641[g_1174405641_Idx].default, chckRange(len_1174405691(HEX5BHEX5D_1174405386(g_1174405641[g_1174405641_Idx].arr, 0)), 0, 2147483647))));
            res_570425943 = addInt(res_570425943, 1);
          }
      };
    };
    }
    
    if ((y_1174405643 < g_1174405641[g_1174405641_Idx].min_y)) {
    Label4: {
      var __1174405869 = 0;
      var colontmp__570425946 = 0;
      colontmp__570425946 = subInt(g_1174405641[g_1174405641_Idx].min_y, y_1174405643);
      var res_570425947 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_570425947 <= colontmp__570425946)) break Label6;
            __1174405869 = res_570425947;
            addFirst_1174405257(g_1174405641[g_1174405641_Idx].arr, toDeque_1174405783(repeat_1174405770(g_1174405641[g_1174405641_Idx].default, chckRange(len_1174405691(HEX5BHEX5D_1174405386(g_1174405641[g_1174405641_Idx].arr, 0)), 0, 2147483647))));
            res_570425947 = addInt(res_570425947, 1);
          }
      };
    };
    g_1174405641[g_1174405641_Idx].min_y = y_1174405643;
    }
    
    if ((max_x_1174405695 < x_1174405642)) {
    Label7: {
      var d_1174405939 = null;
      var i_570425954 = g_1174405641[g_1174405641_Idx].arr.head;
      Label8: {
        var c_570425956 = 0;
        var i_570425957 = 0;
        Label9: {
            Label10: while (true) {
            if (!(i_570425957 < g_1174405641[g_1174405641_Idx].arr.count)) break Label10;
              c_570425956 = i_570425957;
              d_1174405939 = g_1174405641[g_1174405641_Idx].arr.data[chckIndx(i_570425954, 0, (g_1174405641[g_1174405641_Idx].arr.data).length - 1)];
              Label11: {
                var __1174405944 = 0;
                var colontmp__570425951 = 0;
                colontmp__570425951 = subInt(x_1174405642, max_x_1174405695);
                var res_570425952 = 1;
                Label12: {
                    Label13: while (true) {
                    if (!(res_570425952 <= colontmp__570425951)) break Label13;
                      __1174405944 = res_570425952;
                      addLast_1174405815(d_1174405939, g_1174405641[g_1174405641_Idx].default);
                      res_570425952 = addInt(res_570425952, 1);
                    }
                };
              };
              i_570425954 = (addInt(i_570425954, 1) & g_1174405641[g_1174405641_Idx].arr.mask);
              i_570425957 = addInt(i_570425957, 1);
            }
        };
      };
    };
    }
    
    if ((x_1174405642 < g_1174405641[g_1174405641_Idx].min_x)) {
    Label14: {
      var d_1174405957 = null;
      var i_570425964 = g_1174405641[g_1174405641_Idx].arr.head;
      Label15: {
        var c_570425966 = 0;
        var i_570425967 = 0;
        Label16: {
            Label17: while (true) {
            if (!(i_570425967 < g_1174405641[g_1174405641_Idx].arr.count)) break Label17;
              c_570425966 = i_570425967;
              d_1174405957 = g_1174405641[g_1174405641_Idx].arr.data[chckIndx(i_570425964, 0, (g_1174405641[g_1174405641_Idx].arr.data).length - 1)];
              Label18: {
                var __1174405962 = 0;
                var colontmp__570425961 = 0;
                colontmp__570425961 = subInt(g_1174405641[g_1174405641_Idx].min_x, x_1174405642);
                var res_570425962 = 1;
                Label19: {
                    Label20: while (true) {
                    if (!(res_570425962 <= colontmp__570425961)) break Label20;
                      __1174405962 = res_570425962;
                      addFirst_1174405398(d_1174405957, g_1174405641[g_1174405641_Idx].default);
                      res_570425962 = addInt(res_570425962, 1);
                    }
                };
              };
              i_570425964 = (addInt(i_570425964, 1) & g_1174405641[g_1174405641_Idx].arr.mask);
              i_570425967 = addInt(i_570425967, 1);
            }
        };
      };
    };
    g_1174405641[g_1174405641_Idx].min_x = x_1174405642;
    }
    

  
}

function HEX5BHEX5D_1174406044(deq_1174406046, i_1174406047) {
  var result_1174406048 = null;
  var result_1174406048_Idx = 0;

  BeforeRet: {
    if ((deq_1174406046.count <= i_1174406047)) {
    raiseException({message: ([79,117,116,32,111,102,32,98,111,117,110,100,115,58,32] || []).concat(HEX24_385875976(i_1174406047) || [],[32,62,32] || [],HEX24_385875976(subInt(deq_1174406046.count, 1)) || []), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((i_1174406047 < 0)) {
    raiseException({message: ([79,117,116,32,111,102,32,98,111,117,110,100,115,58,32] || []).concat(HEX24_385875976(i_1174406047) || [],[32,60,32,48] || []), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    result_1174406048 = deq_1174406046.data; result_1174406048_Idx = chckIndx((addInt(deq_1174406046.head, i_1174406047) & deq_1174406046.mask), 0, (deq_1174406046.data).length - 1);
    break BeforeRet;
  };

  return [result_1174406048, result_1174406048_Idx];

}

function HEX5BHEX5D_1174405619(g_1174405621, g_1174405621_Idx, x_1174405622, y_1174405623) {
    var Temporary1;

  var result_1174405624 = 0;

    expand_to_1174405639(g_1174405621, g_1174405621_Idx, x_1174405622, y_1174405623);
    result_1174405624 = (Temporary1 = HEX5BHEX5D_1174406044(HEX5BHEX5D_1174405386(g_1174405621[g_1174405621_Idx].arr, chckRange(subInt(y_1174405623, g_1174405621[g_1174405621_Idx].min_y), 0, 2147483647)), chckRange(subInt(x_1174405622, g_1174405621[g_1174405621_Idx].min_x), 0, 2147483647)), Temporary1)[0][Temporary1[1]];

  return result_1174405624;

}

function get_state_1174406207(a_1174406208, a_1174406208_Idx) {
  var result_1174406209 = 0;

    result_1174406209 = HEX5BHEX5D_1174405619(a_1174406208[a_1174406208_Idx], "grid", a_1174406208[a_1174406208_Idx].pos.Field0, a_1174406208[a_1174406208_Idx].pos.Field1);

  return result_1174406209;

}

function turn_1174406186(a_1174406187, a_1174406187_Idx, turn_1174406188) {
    switch (turn_1174406188) {
    case 0:
      break;
    case 2:
      switch (a_1174406187[a_1174406187_Idx].dir) {
      case 0:
        a_1174406187[a_1174406187_Idx].dir = 1;
        break;
      case 1:
        a_1174406187[a_1174406187_Idx].dir = 2;
        break;
      case 2:
        a_1174406187[a_1174406187_Idx].dir = 3;
        break;
      case 3:
        a_1174406187[a_1174406187_Idx].dir = 0;
        break;
      }
      break;
    case 1:
      switch (a_1174406187[a_1174406187_Idx].dir) {
      case 0:
        a_1174406187[a_1174406187_Idx].dir = 3;
        break;
      case 1:
        a_1174406187[a_1174406187_Idx].dir = 0;
        break;
      case 2:
        a_1174406187[a_1174406187_Idx].dir = 1;
        break;
      case 3:
        a_1174406187[a_1174406187_Idx].dir = 2;
        break;
      }
      break;
    case 3:
      switch (a_1174406187[a_1174406187_Idx].dir) {
      case 0:
        a_1174406187[a_1174406187_Idx].dir = 2;
        break;
      case 1:
        a_1174406187[a_1174406187_Idx].dir = 3;
        break;
      case 2:
        a_1174406187[a_1174406187_Idx].dir = 0;
        break;
      case 3:
        a_1174406187[a_1174406187_Idx].dir = 1;
        break;
      }
      break;
    }

  
}

function to_rotation_1174405583(ch_1174405584) {
    var Temporary1;

  var result_1174405585 = 0;

    switch (ch_1174405584) {
    case 78:
      Temporary1 = 0;
      break;
    case 76:
      Temporary1 = 1;
      break;
    case 82:
      Temporary1 = 2;
      break;
    case 85:
      Temporary1 = 3;
      break;
    default: 
      raiseException({message: [105,110,118,97,108,105,100,32,97,110,116,32,100,101,102,105,110,105,116,105,111,110], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_1174405585 = Temporary1;

  return result_1174405585;

}

function HEX5BHEX5DHEX3D_1174406153(deq_1174406155, i_1174406156, val_1174406157) {
    if ((deq_1174406155.mask == 0)) {
    var correctSizeHEX60gensym19_1174406159 = nextPowerOfTwo_738197751(4);
    deq_1174406155.mask = subInt(correctSizeHEX60gensym19_1174406159, 1);
    deq_1174406155.data = new Array(chckRange(correctSizeHEX60gensym19_1174406159, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym19_1174406159, 0, 2147483647) ; ++i) { deq_1174406155.data[i] = 0; }    }
    
    if ((deq_1174406155.count <= i_1174406156)) {
    raiseException({message: ([79,117,116,32,111,102,32,98,111,117,110,100,115,58,32] || []).concat(HEX24_385875976(i_1174406156) || [],[32,62,32] || [],HEX24_385875976(subInt(deq_1174406155.count, 1)) || []), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((i_1174406156 < 0)) {
    raiseException({message: ([79,117,116,32,111,102,32,98,111,117,110,100,115,58,32] || []).concat(HEX24_385875976(i_1174406156) || [],[32,60,32,48] || []), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_1174406155.data[chckIndx((addInt(deq_1174406155.head, i_1174406156) & deq_1174406155.mask), 0, (deq_1174406155.data).length - 1)] = val_1174406157;

  
}

function HEX5BHEX5DHEX3D_1174406066(g_1174406068, g_1174406068_Idx, x_1174406069, y_1174406070, sink_1174406071) {
    expand_to_1174405639(g_1174406068, g_1174406068_Idx, x_1174406069, y_1174406070);
    HEX5BHEX5DHEX3D_1174406153(HEX5BHEX5D_1174405386(g_1174406068[g_1174406068_Idx].arr, chckRange(subInt(y_1174406070, g_1174406068[g_1174406068_Idx].min_y), 0, 2147483647)), chckRange(subInt(x_1174406069, g_1174406068[g_1174406068_Idx].min_x), 0, 2147483647), sink_1174406071);

  
}

function change_state_1174405603(a_1174405604, a_1174405604_Idx) {
    var state_1174406051 = HEX5BHEX5D_1174405619(a_1174405604[a_1174405604_Idx], "grid", a_1174405604[a_1174405604_Idx].pos.Field0, a_1174405604[a_1174405604_Idx].pos.Field1);
    if ((addInt(state_1174406051, 1) < a_1174405604[a_1174405604_Idx].nstates)) {
    HEX5BHEX5DHEX3D_1174406066(a_1174405604[a_1174405604_Idx], "grid", a_1174405604[a_1174405604_Idx].pos.Field0, a_1174405604[a_1174405604_Idx].pos.Field1, addInt(state_1174406051, 1));
    }
    else {
    HEX5BHEX5DHEX3D_1174406066(a_1174405604[a_1174405604_Idx], "grid", a_1174405604[a_1174405604_Idx].pos.Field0, a_1174405604[a_1174405604_Idx].pos.Field1, 0);
    }
    

  
}

function move_1174406189(a_1174406190, a_1174406190_Idx) {
    switch (a_1174406190[a_1174406190_Idx].dir) {
    case 0:
      a_1174406190[a_1174406190_Idx].pos.Field1 = subInt(a_1174406190[a_1174406190_Idx].pos.Field1, 1);
      break;
    case 1:
      a_1174406190[a_1174406190_Idx].pos.Field0 = addInt(a_1174406190[a_1174406190_Idx].pos.Field0, 1);
      break;
    case 2:
      a_1174406190[a_1174406190_Idx].pos.Field1 = addInt(a_1174406190[a_1174406190_Idx].pos.Field1, 1);
      break;
    case 3:
      a_1174406190[a_1174406190_Idx].pos.Field0 = subInt(a_1174406190[a_1174406190_Idx].pos.Field0, 1);
      break;
    }

  
}

function step_1174406229(a_1174406230, a_1174406230_Idx) {
    var state_1174406231 = get_state_1174406207(a_1174406230, a_1174406230_Idx);
    turn_1174406186(a_1174406230, a_1174406230_Idx, to_rotation_1174405583(a_1174406230[a_1174406230_Idx].def[chckIndx(state_1174406231, 0, (a_1174406230[a_1174406230_Idx].def).length - 1)]));
    change_state_1174405603(a_1174406230, a_1174406230_Idx);
    move_1174406189(a_1174406230, a_1174406230_Idx);
    expand_to_1174405639(a_1174406230[a_1174406230_Idx], "grid", a_1174406230[a_1174406230_Idx].pos.Field0, a_1174406230[a_1174406230_Idx].pos.Field1);

  
}

function HEX3Aanonymous_570425582(e_570425583) {
    
function HEX3Aanonymous_570425601(event_570425602) {
        fitCanvas_570425528(c_570425599);
        draw_570425469(ctx_570425600, ant_570425597[0], scale_570425593, palette_570425598);
        if (show_ant_570425596) {
        draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
        }
        

      
    }
    
function HEX3Aanonymous_570425603(event_570425604) {
        var up_scroll_570425605 = (event_570425604.deltaY < 0.0);
        if (up_scroll_570425605) {
        scale_570425593 = ((Math.ceil((scale_570425593 / 2.0))) | 0);
        }
        else {
        if ((scale_570425593 < 256)) {
        scale_570425593 = mulInt(scale_570425593, 2);
        }
        }
        draw_570425469(ctx_570425600, ant_570425597[0], scale_570425593, palette_570425598);
        if (show_ant_570425596) {
        draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
        }
        
        event_570425604.stopImmediatePropagation();

      
    }
    
function HEX3Aanonymous_570425671(event_570425672) {
        if (running_570425592) {
        runButton_570425670.textContent = "Run";
        running_570425592 = false;
        }
        else {
          runButton_570425670.textContent = "Stop";
          running_570425592 = true;
        }
        

      
    }
    
function HEX3Aanonymous_570425673(event_570425674) {
        jump_570425594 = ((Math.pow(10.0, nsuParseFloat(cstrToNimstr(event_570425674.target.value)))) | 0);
        jumpValueLabel_570425586.textContent = toJSStr(HEX24_385875976(jump_570425594));

      
    }
    
function HEX3Aanonymous_570425676(event_570425677) {
        if (definition_valid_570425579(cstrToNimstr(antDefinition_570425584.value))) {
        errorText_570425591.textContent = "";
        ant_570425597[0] = initAnt_1174405170(cstrToNimstr(antDefinition_570425584.value), 0);
        palette_570425598 = nimCopy(null, gen_palette_570425421(ant_570425597[0], paletteSelector_570425589.value), NTI570425385);
        draw_570425469(ctx_570425600, ant_570425597[0], scale_570425593, palette_570425598);
        if (show_ant_570425596) {
        draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
        }
        
        }
        else {
          running_570425592 = false;
          errorText_570425591.textContent = "Ant definition must contain only: (L,R,U,N)";
        }
        

      
    }
    
function HEX3Aanonymous_570425710(event_570425711) {
        palette_570425598 = nimCopy(null, gen_palette_570425421(ant_570425597[0], paletteSelector_570425589.value), NTI570425385);
        draw_570425469(ctx_570425600, ant_570425597[0], scale_570425593, palette_570425598);
        if (show_ant_570425596) {
        draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
        }
        

      
    }
    
function HEX3Aanonymous_570425712(event_570425713) {
        show_ant_570425596 = showAntCheck_570425590.checked;
        draw_570425469(ctx_570425600, ant_570425597[0], scale_570425593, palette_570425598);
        if (show_ant_570425596) {
        draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
        }
        

      
    }
    
function main_570425714() {
        if (running_570425592) {
        if ((jump_570425594 == 1)) {
        var prev_pos_570425715 = nimCopy(null, ant_570425597[0].pos, NTI1174405125);
        step_1174406229(ant_570425597, 0);
        ctx_570425600.fillStyle = palette_570425598[chckIndx(HEX5BHEX5D_1174405619(ant_570425597[0], "grid", prev_pos_570425715.Field0, prev_pos_570425715.Field1), 0, (palette_570425598).length - 1)];
        draw_on_grid_570425396(ctx_570425600, prev_pos_570425715.Field0, prev_pos_570425715.Field1, scale_570425593);
        if (show_ant_570425596) {
        draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
        }
        
        }
        else {
          Label1: {
            var __570425759 = 0;
            var res_570425875 = 1;
            Label2: {
                Label3: while (true) {
                if (!(res_570425875 <= jump_570425594)) break Label3;
                  __570425759 = res_570425875;
                  step_1174406229(ant_570425597, 0);
                  res_570425875 = addInt(res_570425875, 1);
                }
            };
          };
          draw_570425469(ctx_570425600, ant_570425597[0], scale_570425593, palette_570425598);
          if (show_ant_570425596) {
          draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
          }
          
        }
        
        }
        

      
    }
    
function HEX3Aanonymous_570425761(event_570425762) {
        interval_570425595 = get_interval_570425530(nsuParseInt(cstrToNimstr(intervalSlider_570425587.value)));
        intervalValueLabel_570425588.textContent = toJSStr(HEX24_385875976(interval_570425595));
        clearInterval(mainInterval_570425760);
        mainInterval_570425760 = window.setInterval(main_570425714, interval_570425595);

      
    }

    var antDefinition_570425584 = document.getElementById("AntDefinition");
    var jumpSlider_570425585 = document.getElementById("JumpSlider");
    var jumpValueLabel_570425586 = document.getElementById("JumpValueLabel");
    var intervalSlider_570425587 = document.getElementById("IntervalSlider");
    var intervalValueLabel_570425588 = document.getElementById("IntervalValueLabel");
    var paletteSelector_570425589 = document.getElementById("PaletteSelector");
    var showAntCheck_570425590 = document.getElementById("ShowAntCheck");
    var errorText_570425591 = document.getElementById("ErrorText");
    var running_570425592 = false;
    var scale_570425593 = 4;
    var jump_570425594 = ((Math.pow(10.0, nsuParseFloat(cstrToNimstr(jumpSlider_570425585.value)))) | 0);
    var interval_570425595 = get_interval_570425530(nsuParseInt(cstrToNimstr(intervalSlider_570425587.value)));
    var show_ant_570425596 = showAntCheck_570425590.checked;
    var ant_570425597 = [null];
    var palette_570425598 = [];
    if (definition_valid_570425579(cstrToNimstr(antDefinition_570425584.value))) {
    ant_570425597[0] = initAnt_1174405170(cstrToNimstr(antDefinition_570425584.value), 0);
    }
    else {
      errorText_570425591.textContent = "Ant definition must contain only: (L,R,U,N)";
      ant_570425597[0] = initAnt_1174405170([82,76], 0);
    }
    
    palette_570425598 = nimCopy(null, gen_palette_570425421(ant_570425597[0], paletteSelector_570425589.value), NTI570425385);
    jumpValueLabel_570425586.textContent = toJSStr(HEX24_385875976(jump_570425594));
    intervalValueLabel_570425588.textContent = toJSStr(HEX24_385875976(interval_570425595));
    var c_570425599 = document.getElementById("Langton");
    var ctx_570425600 = getContext2d_570425368(c_570425599);
    fitCanvas_570425528(c_570425599);
    draw_570425469(ctx_570425600, ant_570425597[0], scale_570425593, palette_570425598);
    if (show_ant_570425596) {
    draw_ant_570425523(ctx_570425600, ant_570425597[0], scale_570425593, "red");
    }
    
    window.addEventListener("resize", HEX3Aanonymous_570425601, false);
    c_570425599.addEventListener("wheel", HEX3Aanonymous_570425603, false);
    var runButton_570425670 = document.getElementById("RunButton");
    runButton_570425670.onclick = HEX3Aanonymous_570425671;
    jumpSlider_570425585.addEventListener("input", HEX3Aanonymous_570425673, false);
    var restartButton_570425675 = document.getElementById("RestartButton");
    restartButton_570425675.onclick = HEX3Aanonymous_570425676;
    paletteSelector_570425589.onchange = HEX3Aanonymous_570425710;
    showAntCheck_570425590.onchange = HEX3Aanonymous_570425712;
    var mainInterval_570425760 = window.setInterval(main_570425714, interval_570425595);
    intervalSlider_570425587.addEventListener("input", HEX3Aanonymous_570425761, false);

  
}
window.onload = HEX3Aanonymous_570425582;
